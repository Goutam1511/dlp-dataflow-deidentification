plugins {
    id 'java'
    id 'application'
    // shadow plugin to produce fat JARs
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

ext {
    javaVersion = '11.0'
    flinkVersion = '1.17.1'
    scalaBinaryVersion = '2.12'
    slf4jVersion = '1.7.36'
    log4jVersion = '2.17.1'
    beamVersion = '2.47.0'
    flinkVersionNew = flinkVersion.toString().replace("-SNAPSHOT", "") >= "1.17"
}

// artifact properties
group = 'com.google.swarm.tokenization'
version = '0.1-SNAPSHOT'
if (flinkVersionNew) {
    mainClassName = 'com.google.swarm.tokenization.DLPTextToBigQueryStreamingV2'
} else {
    mainClassName = 'com.google.swarm.tokenization.DLPTextToBigQueryStreamingV2'
}
description = """Flink Quickstart Job"""

sourceCompatibility = javaVersion
targetCompatibility = javaVersion
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

applicationDefaultJvmArgs = ["-Dlog4j.configurationFile=log4j2.properties", '--add-opens', 'java.base/jdk.internal.loader=ALL-UNNAMED']

// declare where to find the dependencies of your project
repositories {
    mavenCentral()
    maven {
        url "https://repository.apache.org/content/repositories/snapshots"
        mavenContent(){
            snapshotsOnly()
        }
    }
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

// NOTE: We cannot use "compileOnly" or "shadow" configurations since then we could not run code
// in the IDE or with "gradle run". We also cannot exclude transitive dependencies from the
// shadowJar yet (see https://github.com/johnrengelman/shadow/issues/159).
// -> Explicitly define the // libraries we want to be included in the "flinkShadowJar" configuration!
configurations {
    flinkShadowJar // dependencies which go into the shadowJar
//    flinkShadowJar "org.apache.beam:beam-sdks-java-core:$beamVersion"
//    flinkShadowJar "org.apache.beam:beam-runners-flink-1.16:$beamVersion"
    // always exclude these (also from transitive dependencies) since they are provided by Flink
    flinkShadowJar.exclude group: 'org.apache.flink', module: 'force-shading'
    flinkShadowJar.exclude group: 'com.google.code.findbugs', module: 'jsr305'
    flinkShadowJar.exclude group: 'org.slf4j'
    flinkShadowJar.exclude group: 'org.apache.logging.log4j'
}

// declare the dependencies for your production and test code
dependencies {
    // --------------------------------------------------------------
    // Compile-time dependencies that should NOT be part of the
    // shadow jar and are provided in the lib folder of Flink
    // --------------------------------------------------------------
    if (flinkVersionNew) {
        implementation "org.apache.flink:flink-streaming-java:${flinkVersion}"
        implementation "org.apache.flink:flink-clients:${flinkVersion}"
    } else {
        implementation "org.apache.flink:flink-streaming-java_${scalaBinaryVersion}:${flinkVersion}"
        implementation "org.apache.flink:flink-clients_${scalaBinaryVersion}:${flinkVersion}"
    }
//    transformer implementation=
//            "org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"
//    implementation "org.apache.beam:beam-sdks-java-core:${beamVersion}"
//    implementation "org.apache.beam:beam-runners-flink-1.16:${beamVersion}"
    flinkShadowJar "org.apache.beam:beam-sdks-java-core:${beamVersion}"
    flinkShadowJar "org.apache.beam:beam-runners-flink-1.16:${beamVersion}"
    flinkShadowJar "org.apache.beam:beam-sdks-java-io-google-cloud-platform:${beamVersion}"
    flinkShadowJar "com.google.cloud:google-cloud-storage:2.20.1"
    flinkShadowJar "com.google.cloud:google-cloud-dlp:3.16.0"
    implementation "com.google.auto.value:auto-value-annotations:1.10.1"
    annotationProcessor "com.google.auto.value:auto-value:1.10.1"
    implementation 'com.google.auth:google-auth-library-oauth2-http:1.3.0'
    flinkShadowJar group: 'org.apache.commons', name: 'commons-csv', version: '1.10.0'
//    flinkShadowJar group: 'org.apache.beam', name: 'beam-sdks-java-core', version: beamVersion
//    flinkShadowJar group: 'org.apache.beam', name: 'beam-runners-flink-1.16', version: beamVersion

    // --------------------------------------------------------------
    // Dependencies that should be part of the shadow jar, e.g.
    // connectors. These must be in the flinkShadowJar configuration!
    // --------------------------------------------------------------
    //flinkShadowJar "org.apache.flink:flink-connector-kafka:${flinkVersion}"

    runtimeOnly "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
    runtimeOnly "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    runtimeOnly "org.apache.logging.log4j:log4j-core:${log4jVersion}"

    // Add test dependencies here.
    // testCompile "junit:junit:4.12"
    testImplementation "org.apache.beam:beam-runners-direct-java:$beamVersion"
}

// make compileOnly dependencies available for tests:
sourceSets {
    main.compileClasspath += configurations.flinkShadowJar
    main.runtimeClasspath += configurations.flinkShadowJar

    test.compileClasspath += configurations.flinkShadowJar
    test.runtimeClasspath += configurations.flinkShadowJar

    javadoc.classpath += configurations.flinkShadowJar
}

run.classpath = sourceSets.main.runtimeClasspath
//run{
//    classpath = sourceSets.main.runtimeClasspath
//    jvmArgs '--add-opens', 'java.base/jdk.internal.loader=ALL-UNNAMED'
//}

jar {
    manifest {
        attributes 'Built-By': System.getProperty('user.name'),
                'Build-Jdk': System.getProperty('java.version')
    }
}

shadowJar {
    configurations = [project.configurations.flinkShadowJar]
    zip64=true
    mergeServiceFiles()
    manifest {
        attributes 'Main-Class': mainClassName
    }
}
